{"version":3,"sources":["Loader.jsx","Body.jsx","Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","Body","useState","confirmed","setConfirmed","recovered","setRecovered","deaths","setDeaths","getCountry","useContext","SetCountry","useEffect","country","a","covidApi","fetch","headers","response","json","data","FetchCovidData","split","toLocaleString","createContext","Home","setCountry","Array","countriesList","setCountriesList","FetchCountries","value","onChange","e","target","map","c","index","name","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAEe,SAASA,IACpB,OACI,qBAAKC,UAAU,SAAf,SACA,qBAAKA,UAAU,oBCAR,SAASC,IAAQ,IAAD,EACOC,mBAAS,IADhB,mBACpBC,EADoB,KACTC,EADS,OAEOF,mBAAS,IAFhB,mBAEpBG,EAFoB,KAETC,EAFS,OAGCJ,mBAAS,IAHV,mBAGpBK,EAHoB,KAGZC,EAHY,KAIrBC,EAAaC,qBAAWC,GA4B9B,OA3BAC,qBAAU,WAAM,4CAMZ,WAA8BC,GAA9B,mBAAAC,EAAA,4DACmB,qDACTC,EAFV,4DAE0EF,GAF1E,SAG2BG,MAAMD,EAAU,CACnCE,QAAS,CACL,iBAJO,wDADnB,cAGUC,EAHV,gBAQqBA,EAASC,OAR9B,OASmB,OADXC,EARR,QASa,IACLhB,EAAagB,EAAK,GAAGjB,WACrBG,EAAac,EAAK,GAAGf,WACrBG,EAAUY,EAAK,GAAGb,UAElBH,EAAa,YACbE,EAAa,YACbE,EAAU,aAhBlB,4CANY,sBACZJ,EAAa,IACbE,EAAa,IACbE,EAAU,IAHE,oCAKZa,CADQZ,EAAWa,MAAM,KACR,MAoBlB,CAACb,IAGA,sBAAKT,UAAU,OAAf,UACI,sBAAKA,UAAU,YAAf,UACI,6BAAmB,KAAdG,EAAmBA,EAAUoB,iBAAmB,cAAC,EAAD,MACrD,8BAAG,+CAAH,UAEJ,sBAAKvB,UAAU,YAAf,UACI,6BAAmB,KAAdK,EAAmBA,EAAUkB,iBAAmB,cAAC,EAAD,MACrD,kCAAI,+CAAJ,UAEJ,sBAAKvB,UAAU,SAAf,UACI,6BAAgB,KAAXO,EAAgBA,EAAOgB,iBAAmB,cAAC,EAAD,MAC/C,kCAAI,qDC9CpB,IAAMZ,EAAaa,0BAmCJC,EAlCF,WAAO,IAAD,EACevB,mBAAS,YADxB,mBACRW,EADQ,KACCa,EADD,OAE2BxB,mBAAS,IAAIyB,MAAM,KAF9C,mBAERC,EAFQ,KAEOC,EAFP,iDAMf,8BAAAf,EAAA,4DACyB,uCADzB,SAE2BE,MADF,wCADzB,cAEUE,EAFV,gBAGqBA,EAASC,OAH9B,OAGQC,EAHR,OAIIS,EAAiBT,GAJrB,4CANe,sBAYf,OATAR,qBAAU,YAHK,mCAIXkB,KACD,CAACjB,IAQA,gCACI,qBAAKb,UAAU,UAAf,SACI,6BACI,mCAAQ,mBAAGA,UAAU,iBAArB,6BAGR,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,SAAf,SACI,wBAAQ+B,MAAOlB,EAASmB,SAAU,SAACC,GAAD,OAAOP,EAAWO,EAAEC,OAAOH,QAA7D,SACKH,EAAcO,KAAI,SAACC,EAAGC,GAAJ,OACf,wBAAoBN,MAAOK,EAAEE,KAA7B,SAAoCF,EAAEE,MAAzBD,YAK7B,cAAC1B,EAAW4B,SAAZ,CAAqBR,MAAOlB,EAA5B,SACI,cAAC,EAAD,UCvBD2B,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78e43dfb.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Loader.css\"\r\nexport default function Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n        <div className=\"lds-hourglass\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport \"./Body.css\"\r\nimport Loader from \"./Loader\"\r\nimport { SetCountry } from \"./Home\";\r\n\r\nexport default function Body() {\r\n    const [confirmed, setConfirmed] = useState(\"\");\r\n    const [recovered, setRecovered] = useState(\"\");\r\n    const [deaths, setDeaths] = useState(\"\");\r\n    const getCountry = useContext(SetCountry);\r\n    useEffect(() => {\r\n        setConfirmed(\"\");\r\n        setRecovered(\"\");\r\n        setDeaths(\"\");\r\n        let c = getCountry.split(\"(\");\r\n        FetchCovidData(c[0]);\r\n        async function FetchCovidData(country) {\r\n            const apiKey = \"6cc5c51788mshd0c62b2be206fbdp1fd87cjsn5f77e0d4cb1d\";\r\n            const covidApi = `https://covid-19-data.p.rapidapi.com/country?name=${country}`;\r\n            const response = await fetch(covidApi, {\r\n                headers: {\r\n                    'x-rapidapi-key': apiKey,\r\n                },\r\n            })\r\n            let data = await response.json();\r\n            if (data[0] != null) {\r\n                setConfirmed(data[0].confirmed)\r\n                setRecovered(data[0].recovered)\r\n                setDeaths(data[0].deaths)\r\n            } else {\r\n                setConfirmed(\"No Cases\")\r\n                setRecovered(\"No Cases\")\r\n                setDeaths(\"No Cases\")\r\n            }\r\n        }\r\n    }, [getCountry])\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"confirmed\">\r\n                <h1>{confirmed !== \"\" ? confirmed.toLocaleString() : <Loader />}</h1>\r\n                <p><strong>Confirmed</strong> </p>\r\n            </div>\r\n            <div className=\"recovered\">\r\n                <h1>{recovered !== \"\" ? recovered.toLocaleString() : <Loader />}</h1>\r\n                <p> <strong>Recovered</strong> </p>\r\n            </div>\r\n            <div className=\"deaths\">\r\n                <h1>{deaths !== \"\" ? deaths.toLocaleString() : <Loader />}</h1>\r\n                <p> <strong>Deaths</strong></p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useState, createContext,useEffect } from 'react'\r\nimport \"./Home.css\"\r\nimport Body from \"./Body\"\r\nconst SetCountry = createContext();\r\nconst Home = () => {\r\n    const [country, setCountry] = useState(\"Pakistan\");\r\n    const [countriesList, setCountriesList] = useState(new Array([]));\r\n    useEffect(() => {\r\n        FetchCountries();\r\n    }, [country]);\r\n    async function FetchCountries() {\r\n        const CountriesUrl = \"https://restcountries.eu/rest/v2/all\";\r\n        const response = await fetch(CountriesUrl);\r\n        let data = await response.json();\r\n        setCountriesList(data);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"heading\">\r\n                <h1>\r\n                    <strong><i className=\"fas fa-virus\"></i> CoronaVirus Cases </strong>\r\n                </h1>\r\n            </div>\r\n            <div className=\"select-country\">\r\n                <div className=\"select\">\r\n                    <select value={country} onChange={(e) => setCountry(e.target.value)} >\r\n                        {countriesList.map((c, index) => (\r\n                            <option key={index} value={c.name}>{c.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <SetCountry.Provider value={country}>\r\n                <Body/>\r\n            </SetCountry.Provider>\r\n        </div >\r\n    )\r\n}\r\nexport default Home;\r\nexport { SetCountry };","import \"./App.css\";\nimport Home from \"./Home\";\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}